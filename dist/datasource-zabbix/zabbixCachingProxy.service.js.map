{"version":3,"sources":["../../src/datasource-zabbix/zabbixCachingProxy.service.js"],"names":["ZabbixCachingProxyFactory","ZabbixCachingProxy","zabbixAPI","cacheOptions","cacheEnabled","enabled","ttl","cache","groups","hosts","applications","items","history","trends","macros","globalMacros","historyPromises","getHistory","callAPIRequestOnce","_","bind","getHistoryRequestHash","groupPromises","getGroupsOnce","getGroups","getRequestHash","hostPromises","getHostsOnce","getHosts","appPromises","getAppsOnce","getApps","itemPromises","getItemsOnce","getItems","getItemsInfo","macroPromises","getMacrosOnce","getMacros","globalMacroPromises","getGlobalMacrosOnce","getGlobalMacros","cacheObject","object_age","Date","now","timestamp","request","params","hash","isExpired","Promise","resolve","value","then","result","proxyRequest","groupids","hostids","appids","itemtype","promises","all","flatten","time_from","time_till","historyStorage","full_history","expired","filter","keyBy","item","itemid","length","grouped_history","groupBy","forEach","map","func","promiseKeeper","argsHashFunc","arguments","apply","args","requestStamp","arg","undefined","isArray","sort","toString","join","getHash","itemids","stamp","angular","module","factory","String","prototype","i","chr","len","charCodeAt","indexBy"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;;AAEA;AACA,WAASA,yBAAT,GAAqC;AAAA,QAE7BC,kBAF6B;AAGjC,kCAAYC,SAAZ,EAAuBC,YAAvB,EAAqC;AAAA;;AACnC,aAAKD,SAAL,GAAiBA,SAAjB;AACA,aAAKE,YAAL,GAAoBD,aAAaE,OAAjC;AACA,aAAKC,GAAL,GAAoBH,aAAaG,GAAb,IAAoB,MAAxC,CAHmC,CAGa;;AAEhD;AACA,aAAKC,KAAL,GAAa;AACXC,kBAAQ,EADG;AAEXC,iBAAO,EAFI;AAGXC,wBAAc,EAHH;AAIXC,iBAAO,EAJI;AAKXC,mBAAS,EALE;AAMXC,kBAAQ,EANG;AAOXC,kBAAQ,EAPG;AAQXC,wBAAc;AARH,SAAb;;AAWA,aAAKC,eAAL,GAAuB,EAAvB;;AAEA;AACA,aAAKC,UAAL,GAAkBC,mBAAmBC,EAAEC,IAAF,CAAO,KAAKlB,SAAL,CAAee,UAAtB,EAAkC,KAAKf,SAAvC,CAAnB,EACmB,KAAKc,eADxB,EACyCK,qBADzC,CAAlB;;AAGA;AACA,aAAKC,aAAL,GAAqB,EAArB;AACA,aAAKC,aAAL,GAAqBL,mBAAmBC,EAAEC,IAAF,CAAO,KAAKlB,SAAL,CAAesB,SAAtB,EAAiC,KAAKtB,SAAtC,CAAnB,EACmB,KAAKoB,aADxB,EACuCG,cADvC,CAArB;;AAGA,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAKC,YAAL,GAAoBT,mBAAmBC,EAAEC,IAAF,CAAO,KAAKlB,SAAL,CAAe0B,QAAtB,EAAgC,KAAK1B,SAArC,CAAnB,EACmB,KAAKwB,YADxB,EACsCD,cADtC,CAApB;;AAGA,aAAKI,WAAL,GAAmB,EAAnB;AACA,aAAKC,WAAL,GAAmBZ,mBAAmBC,EAAEC,IAAF,CAAO,KAAKlB,SAAL,CAAe6B,OAAtB,EAA+B,KAAK7B,SAApC,CAAnB,EACmB,KAAK2B,WADxB,EACqCJ,cADrC,CAAnB;;AAGA,aAAKO,YAAL,GAAoB,EAApB;AACA,aAAKC,YAAL,GAAoBf,mBAAmBC,EAAEC,IAAF,CAAO,KAAKlB,SAAL,CAAegC,QAAtB,EAAgC,KAAKhC,SAArC,CAAnB,EACmB,KAAK8B,YADxB,EACsCP,cADtC,CAApB;;AAGA,aAAKU,YAAL,GAAoBjB,mBAAmBC,EAAEC,IAAF,CAAO,KAAKlB,SAAL,CAAeiC,YAAtB,EAAoC,KAAKjC,SAAzC,CAAnB,EAClB,KAAK8B,YADa,EACCP,cADD,CAApB;;AAGA,aAAKW,aAAL,GAAqB,EAArB;AACA,aAAKC,aAAL,GAAqBnB,mBAAmBC,EAAEC,IAAF,CAAO,KAAKlB,SAAL,CAAeoC,SAAtB,EAAiC,KAAKpC,SAAtC,CAAnB,EACkB,KAAKkC,aADvB,EACsCX,cADtC,CAArB;;AAGA,aAAKc,mBAAL,GAA2B,EAA3B;AACA,aAAKC,mBAAL,GAA2BtB,mBAAmBC,EAAEC,IAAF,CAAO,KAAKlB,SAAL,CAAeuC,eAAtB,EAAuC,KAAKvC,SAA5C,CAAnB,EACmB,KAAKqC,mBADxB,EAC6Cd,cAD7C,CAA3B;AAED;;AArDgC;AAAA;AAAA,kCAuDvBiB,WAvDuB,EAuDV;AACrB,cAAIA,WAAJ,EAAiB;AACf,gBAAIC,aAAaC,KAAKC,GAAL,KAAaH,YAAYI,SAA1C;AACA,mBAAO,EAAEJ,YAAYI,SAAZ,IAAyBH,aAAa,KAAKrC,GAA7C,CAAP;AACD,WAHD,MAGO;AACL,mBAAO,IAAP;AACD;AACF;AA9DgC;AAAA;AAAA,qCAoEpByC,OApEoB,EAoEXC,MApEW,EAoEHN,WApEG,EAoEU;AACzC,cAAIO,OAAOxB,eAAeuB,MAAf,CAAX;AACA,cAAI,KAAK5C,YAAL,IAAqB,CAAC,KAAK8C,SAAL,CAAeR,YAAYO,IAAZ,CAAf,CAA1B,EAA6D;AAC3D,mBAAOE,QAAQC,OAAR,CAAgBV,YAAYO,IAAZ,EAAkBI,KAAlC,CAAP;AACD,WAFD,MAEO;AACL,mBAAON,4CAAWC,MAAX,GACNM,IADM,CACD,kBAAU;AACdZ,0BAAYO,IAAZ,IAAoB;AAClBI,uBAAOE,MADW;AAElBT,2BAAWF,KAAKC,GAAL;AAFO,eAApB;AAIA,qBAAOU,MAAP;AACD,aAPM,CAAP;AAQD;AACF;AAlFgC;AAAA;AAAA,oCAoFrB;AACV,iBAAO,KAAKC,YAAL,CAAkB,KAAKjC,aAAvB,EAAsC,EAAtC,EAA0C,KAAKhB,KAAL,CAAWC,MAArD,CAAP;AACD;AAtFgC;AAAA;AAAA,iCAwFxBiD,QAxFwB,EAwFd;AACjB,iBAAO,KAAKD,YAAL,CAAkB,KAAK7B,YAAvB,EAAqC,CAAC8B,QAAD,CAArC,EAAiD,KAAKlD,KAAL,CAAWE,KAA5D,CAAP;AACD;AA1FgC;AAAA;AAAA,gCA4FzBiD,OA5FyB,EA4FhB;AACf,iBAAO,KAAKF,YAAL,CAAkB,KAAK1B,WAAvB,EAAoC,CAAC4B,OAAD,CAApC,EAA+C,KAAKnD,KAAL,CAAWG,YAA1D,CAAP;AACD;AA9FgC;AAAA;AAAA,iCAgGxBgD,OAhGwB,EAgGfC,MAhGe,EAgGPC,QAhGO,EAgGG;AAClC,cAAIZ,SAAS,CAACU,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAAb;AACA,iBAAO,KAAKJ,YAAL,CAAkB,KAAKvB,YAAvB,EAAqCe,MAArC,EAA6C,KAAKzC,KAAL,CAAWI,KAAxD,CAAP;AACD;AAnGgC;AAAA;AAAA,kCAqGvB+C,OArGuB,EAqGd;AACjB;AACA,cAAIG,WAAW,CACb,KAAKL,YAAL,CAAkB,KAAKnB,aAAvB,EAAsC,CAACqB,OAAD,CAAtC,EAAiD,KAAKnD,KAAL,CAAWO,MAA5D,CADa,EAEb,KAAK0C,YAAL,CAAkB,KAAKhB,mBAAvB,EAA4C,EAA5C,EAAgD,KAAKjC,KAAL,CAAWQ,YAA3D,CAFa,CAAf;;AAKA,iBAAOoC,QAAQW,GAAR,CAAYD,QAAZ,EAAsBP,IAAtB,CAA2BnC,EAAE4C,OAA7B,CAAP;AACD;AA7GgC;AAAA;AAAA,4CA+GbpD,KA/Ga,EA+GNqD,SA/GM,EA+GKC,SA/GL,EA+GgB;AAC/C,cAAIC,iBAAiB,KAAK3D,KAAL,CAAWK,OAAhC;AACA,cAAIuD,YAAJ;AACA,cAAIC,UAAUjD,EAAEkD,MAAF,CAASlD,EAAEmD,KAAF,CAAQ3D,KAAR,EAAe,QAAf,CAAT,EAAmC,UAAC4D,IAAD,EAAOC,MAAP,EAAkB;AACjE,mBAAO,CAACN,eAAeM,MAAf,CAAR;AACD,WAFa,CAAd;AAGA,cAAIJ,QAAQK,MAAZ,EAAoB;AAClB,mBAAO,KAAKvE,SAAL,CAAee,UAAf,CAA0BmD,OAA1B,EAAmCJ,SAAnC,EAA8CC,SAA9C,EAAyDX,IAAzD,CAA8D,UAAS1C,OAAT,EAAkB;AACrF,kBAAI8D,kBAAkBvD,EAAEwD,OAAF,CAAU/D,OAAV,EAAmB,QAAnB,CAAtB;AACAO,gBAAEyD,OAAF,CAAUR,OAAV,EAAmB,gBAAQ;AACzB,oBAAII,SAASD,KAAKC,MAAlB;AACAN,+BAAeM,MAAf,IAAyBD,IAAzB;AACAL,+BAAeM,MAAf,EAAuBR,SAAvB,GAAmCA,SAAnC;AACAE,+BAAeM,MAAf,EAAuBP,SAAvB,GAAmCA,SAAnC;AACAC,+BAAeM,MAAf,EAAuB5D,OAAvB,GAAiC8D,gBAAgBF,MAAhB,CAAjC;AACD,eAND;AAOAL,6BAAehD,EAAE0D,GAAF,CAAMlE,KAAN,EAAa,gBAAQ;AAClC,uBAAOuD,eAAeK,KAAKC,MAApB,EAA4B5D,OAAnC;AACD,eAFc,CAAf;AAGA,qBAAOO,EAAE4C,OAAF,CAAUI,YAAV,EAAwB,IAAxB,CAAP;AACD,aAbM,CAAP;AAcD,WAfD,MAeO;AACLA,2BAAehD,EAAE0D,GAAF,CAAMlE,KAAN,EAAa,UAAS4D,IAAT,EAAe;AACzC,qBAAOL,eAAeK,KAAKC,MAApB,EAA4B5D,OAAnC;AACD,aAFc,CAAf;AAGA,mBAAOuC,QAAQC,OAAR,CAAgBjC,EAAE4C,OAAF,CAAUI,YAAV,EAAwB,IAAxB,CAAhB,CAAP;AACD;AACF;AA1IgC;AAAA;AAAA,0CA4IfxD,KA5Ie,EA4IRqD,SA5IQ,EA4IGC,SA5IH,EA4Ic;AAC7C,iBAAO,KAAK/D,SAAL,CAAee,UAAf,CAA0BN,KAA1B,EAAiCqD,SAAjC,EAA4CC,SAA5C,CAAP;AACD;AA9IgC;;AAAA;AAAA;;AAiJnC,WAAOhE,kBAAP;AACD;;AAMD;;;;AAIA,WAASiB,kBAAT,CAA4B4D,IAA5B,EAAkCC,aAAlC,EAAiDC,YAAjD,EAA+D;AAC7D,WAAO,YAAW;AAChB,UAAI/B,OAAO+B,aAAaC,SAAb,CAAX;AACA,UAAI,CAACF,cAAc9B,IAAd,CAAL,EAA0B;AACxB8B,sBAAc9B,IAAd,IAAsBE,QAAQC,OAAR,CACpB0B,KAAKI,KAAL,CAAW,IAAX,EAAiBD,SAAjB,EACC3B,IADD,CACM,kBAAU;AACdyB,wBAAc9B,IAAd,IAAsB,IAAtB;AACA,iBAAOM,MAAP;AACD,SAJD,CADoB,CAAtB;AAOD;AACD,aAAOwB,cAAc9B,IAAd,CAAP;AACD,KAZD;AAaD;;AAED,WAASxB,cAAT,CAAwB0D,IAAxB,EAA8B;AAC5B,QAAIC,eAAejE,EAAE0D,GAAF,CAAMM,IAAN,EAAY,eAAO;AACpC,UAAIE,QAAQC,SAAZ,EAAuB;AACrB,eAAO,WAAP;AACD,OAFD,MAEO;AACL,YAAInE,EAAEoE,OAAF,CAAUF,GAAV,CAAJ,EAAoB;AAClB,iBAAOA,IAAIG,IAAJ,GAAWC,QAAX,EAAP;AACD,SAFD,MAEO;AACL,iBAAOJ,IAAII,QAAJ,EAAP;AACD;AACF;AACF,KAVkB,EAUhBC,IAVgB,EAAnB;AAWA,WAAON,aAAaO,OAAb,EAAP;AACD;;AAED,WAAStE,qBAAT,CAA+B8D,IAA/B,EAAqC;AACnC,QAAIS,UAAUzE,EAAE0D,GAAF,CAAMM,KAAK,CAAL,CAAN,EAAe,QAAf,CAAd;AACA,QAAIU,QAAQD,QAAQF,IAAR,KAAiBP,KAAK,CAAL,CAAjB,GAA2BA,KAAK,CAAL,CAAvC;AACA,WAAOU,MAAMF,OAAN,EAAP;AACD;;;;AAtMMG,a;;AACA3E,O;;;;;;;;;;;;;;;;;;;;;AA0JP2E,cACGC,MADH,CACU,kBADV,EAEGC,OAFH,CAEW,oBAFX,EAEiChG,yBAFjC,EA6CAiG,OAAOC,SAAP,CAAiBP,OAAjB,GAA2B,YAAW;AACpC,YAAI1C,OAAO,CAAX;AAAA,YAAckD,CAAd;AAAA,YAAiBC,GAAjB;AAAA,YAAsBC,GAAtB;AACA,YAAI,KAAK5B,MAAL,KAAgB,CAApB,EAAuB;AACrB,eAAK0B,IAAI,CAAJ,EAAOE,MAAM,KAAK5B,MAAvB,EAA+B0B,IAAIE,GAAnC,EAAwCF,GAAxC,EAA6C;AAC3CC,kBAAQ,KAAKE,UAAL,CAAgBH,CAAhB,CAAR;AACAlD,mBAAS,CAACA,QAAQ,CAAT,IAAcA,IAAf,GAAuBmD,GAA/B;AACAnD,oBAAQ,CAAR,CAH2C,CAGhC;AACZ;AACF;AACD,eAAOA,IAAP;AACD,OAVD;;AAYA;AACA,UAAI,CAAC9B,EAAEmD,KAAP,EAAc;AAACnD,UAAEmD,KAAF,GAAUnD,EAAEoF,OAAZ;AAAqB","file":"zabbixCachingProxy.service.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\n\n// Use factory() instead service() for multiple datasources support.\n// Each datasource instance must initialize its own cache.\n\n/** @ngInject */\nfunction ZabbixCachingProxyFactory() {\n\n  class ZabbixCachingProxy {\n    constructor(zabbixAPI, cacheOptions) {\n      this.zabbixAPI = zabbixAPI;\n      this.cacheEnabled = cacheOptions.enabled;\n      this.ttl          = cacheOptions.ttl || 600000; // 10 minutes by default\n\n      // Internal objects for data storing\n      this.cache = {\n        groups: {},\n        hosts: {},\n        applications: {},\n        items: {},\n        history: {},\n        trends: {},\n        macros: {},\n        globalMacros: {}\n      };\n\n      this.historyPromises = {};\n\n      // Don't run duplicated history requests\n      this.getHistory = callAPIRequestOnce(_.bind(this.zabbixAPI.getHistory, this.zabbixAPI),\n                                           this.historyPromises, getHistoryRequestHash);\n\n      // Don't run duplicated requests\n      this.groupPromises = {};\n      this.getGroupsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getGroups, this.zabbixAPI),\n                                              this.groupPromises, getRequestHash);\n\n      this.hostPromises = {};\n      this.getHostsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getHosts, this.zabbixAPI),\n                                             this.hostPromises, getRequestHash);\n\n      this.appPromises = {};\n      this.getAppsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getApps, this.zabbixAPI),\n                                            this.appPromises, getRequestHash);\n\n      this.itemPromises = {};\n      this.getItemsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getItems, this.zabbixAPI),\n                                             this.itemPromises, getRequestHash);\n\n      this.getItemsInfo = callAPIRequestOnce(_.bind(this.zabbixAPI.getItemsInfo, this.zabbixAPI),\n        this.itemPromises, getRequestHash);\n\n      this.macroPromises = {};\n      this.getMacrosOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getMacros, this.zabbixAPI),\n                                             this.macroPromises, getRequestHash);\n\n      this.globalMacroPromises = {};\n      this.getGlobalMacrosOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getGlobalMacros, this.zabbixAPI),\n                                                    this.globalMacroPromises, getRequestHash);\n    }\n\n    isExpired(cacheObject) {\n      if (cacheObject) {\n        let object_age = Date.now() - cacheObject.timestamp;\n        return !(cacheObject.timestamp && object_age < this.ttl);\n      } else {\n        return true;\n      }\n    }\n\n    /**\n     * Check that result is present in cache and up to date\n     * or send request to API.\n     */\n    proxyRequest(request, params, cacheObject) {\n      let hash = getRequestHash(params);\n      if (this.cacheEnabled && !this.isExpired(cacheObject[hash])) {\n        return Promise.resolve(cacheObject[hash].value);\n      } else {\n        return request(...params)\n        .then(result => {\n          cacheObject[hash] = {\n            value: result,\n            timestamp: Date.now()\n          };\n          return result;\n        });\n      }\n    }\n\n    getGroups() {\n      return this.proxyRequest(this.getGroupsOnce, [], this.cache.groups);\n    }\n\n    getHosts(groupids) {\n      return this.proxyRequest(this.getHostsOnce, [groupids], this.cache.hosts);\n    }\n\n    getApps(hostids) {\n      return this.proxyRequest(this.getAppsOnce, [hostids], this.cache.applications);\n    }\n\n    getItems(hostids, appids, itemtype) {\n      let params = [hostids, appids, itemtype];\n      return this.proxyRequest(this.getItemsOnce, params, this.cache.items);\n    }\n\n    getMacros(hostids) {\n      // Merge global macros and host macros\n      let promises = [\n        this.proxyRequest(this.getMacrosOnce, [hostids], this.cache.macros),\n        this.proxyRequest(this.getGlobalMacrosOnce, [], this.cache.globalMacros)\n      ];\n\n      return Promise.all(promises).then(_.flatten);\n    }\n\n    getHistoryFromCache(items, time_from, time_till) {\n      var historyStorage = this.cache.history;\n      var full_history;\n      var expired = _.filter(_.keyBy(items, 'itemid'), (item, itemid) => {\n        return !historyStorage[itemid];\n      });\n      if (expired.length) {\n        return this.zabbixAPI.getHistory(expired, time_from, time_till).then(function(history) {\n          var grouped_history = _.groupBy(history, 'itemid');\n          _.forEach(expired, item => {\n            var itemid = item.itemid;\n            historyStorage[itemid] = item;\n            historyStorage[itemid].time_from = time_from;\n            historyStorage[itemid].time_till = time_till;\n            historyStorage[itemid].history = grouped_history[itemid];\n          });\n          full_history = _.map(items, item => {\n            return historyStorage[item.itemid].history;\n          });\n          return _.flatten(full_history, true);\n        });\n      } else {\n        full_history = _.map(items, function(item) {\n          return historyStorage[item.itemid].history;\n        });\n        return Promise.resolve(_.flatten(full_history, true));\n      }\n    }\n\n    getHistoryFromAPI(items, time_from, time_till) {\n      return this.zabbixAPI.getHistory(items, time_from, time_till);\n    }\n  }\n\n  return ZabbixCachingProxy;\n}\n\nangular\n  .module('grafana.services')\n  .factory('ZabbixCachingProxy', ZabbixCachingProxyFactory);\n\n/**\n * Wrap zabbix API request to prevent multiple calls\n * with same params when waiting for result.\n */\nfunction callAPIRequestOnce(func, promiseKeeper, argsHashFunc) {\n  return function() {\n    var hash = argsHashFunc(arguments);\n    if (!promiseKeeper[hash]) {\n      promiseKeeper[hash] = Promise.resolve(\n        func.apply(this, arguments)\n        .then(result => {\n          promiseKeeper[hash] = null;\n          return result;\n        })\n      );\n    }\n    return promiseKeeper[hash];\n  };\n}\n\nfunction getRequestHash(args) {\n  var requestStamp = _.map(args, arg => {\n    if (arg === undefined) {\n      return 'undefined';\n    } else {\n      if (_.isArray(arg)) {\n        return arg.sort().toString();\n      } else {\n        return arg.toString();\n      }\n    }\n  }).join();\n  return requestStamp.getHash();\n}\n\nfunction getHistoryRequestHash(args) {\n  let itemids = _.map(args[0], 'itemid');\n  let stamp = itemids.join() + args[1] + args[2];\n  return stamp.getHash();\n}\n\nString.prototype.getHash = function() {\n  var hash = 0, i, chr, len;\n  if (this.length !== 0) {\n    for (i = 0, len = this.length; i < len; i++) {\n      chr   = this.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n  }\n  return hash;\n};\n\n// Fix for backward compatibility with lodash 2.4\nif (!_.keyBy) {_.keyBy = _.indexBy;}\n"]}