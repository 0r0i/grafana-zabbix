{"version":3,"sources":["../../src/datasource-zabbix/zabbix.js"],"names":["ZabbixFactory","zabbixAPIService","ZabbixCachingProxy","Zabbix","url","username","password","basicAuth","withCredentials","cacheTTL","ZabbixAPI","zabbixAPI","cacheOptions","enabled","ttl","cachingProxy","getHistory","bind","getTrend","getEvents","getAcknowledges","getITService","getSLA","getVersion","login","target","options","parts","filters","_","map","p","filter","getItems","getGroups","groupFilter","getAllGroups","then","findByFilter","groups","groupids","getHosts","hostFilter","getAllHosts","hosts","hostids","getApps","appFilter","filterByQuery","apps","appFilterEmpty","undefined","itemtype","appids","showDisabledItems","items","itemFilter","getAllItems","showTriggers","hideHostsInMaintenance","promises","Promise","all","filteredGroups","results","filteredHosts","filteredApps","query","applicationids","flatten","getTriggers","findByName","list","name","finded","find","filterByName","filterByRegex","regex","filterPattern","utils","buildRegex","zbx_obj","test","isRegex","angular","module","factory"],"mappings":"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","file":"zabbix.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport * as utils from './utils';\nimport './zabbixAPI.service.js';\nimport './zabbixCachingProxy.service.js';\n\n// Use factory() instead service() for multiple data sources support.\n// Each Zabbix data source instance should initialize its own API instance.\n\n/** @ngInject */\nfunction ZabbixFactory(zabbixAPIService, ZabbixCachingProxy) {\n\n  class Zabbix {\n    constructor(url, username, password, basicAuth, withCredentials, cacheTTL) {\n\n      // Initialize Zabbix API\n      var ZabbixAPI = zabbixAPIService;\n      this.zabbixAPI = new ZabbixAPI(url, username, password, basicAuth, withCredentials);\n\n      // Initialize caching proxy for requests\n      let cacheOptions = {\n        enabled: true,\n        ttl: cacheTTL\n      };\n      this.cachingProxy = new ZabbixCachingProxy(this.zabbixAPI, cacheOptions);\n\n      // Proxy methods\n      this.getHistory = this.cachingProxy.getHistory.bind(this.cachingProxy);\n\n      this.getTrend = this.zabbixAPI.getTrend.bind(this.zabbixAPI);\n      this.getEvents = this.zabbixAPI.getEvents.bind(this.zabbixAPI);\n      this.getAcknowledges = this.zabbixAPI.getAcknowledges.bind(this.zabbixAPI);\n      this.getITService = this.zabbixAPI.getITService.bind(this.zabbixAPI);\n      this.getSLA = this.zabbixAPI.getSLA.bind(this.zabbixAPI);\n      this.getVersion = this.zabbixAPI.getVersion.bind(this.zabbixAPI);\n      this.login = this.zabbixAPI.login.bind(this.zabbixAPI);\n    }\n\n    getItemsFromTarget(target, options) {\n      let parts = ['group', 'host', 'application', 'item'];\n      let filters = _.map(parts, p => target[p].filter);\n      return this.getItems(...filters, options);\n    }\n\n    getAllGroups() {\n      return this.cachingProxy.getGroups();\n    }\n\n    getGroups(groupFilter) {\n      return this.getAllGroups()\n      .then(groups => findByFilter(groups, groupFilter));\n    }\n\n    /**\n     * Get list of host belonging to given groups.\n     */\n    getAllHosts(groupFilter) {\n      return this.getGroups(groupFilter)\n      .then(groups => {\n        let groupids = _.map(groups, 'groupid');\n        return this.cachingProxy.getHosts(groupids);\n      });\n    }\n\n    getHosts(groupFilter, hostFilter) {\n      return this.getAllHosts(groupFilter)\n      .then(hosts => findByFilter(hosts, hostFilter));\n    }\n\n    /**\n     * Get list of applications belonging to given groups and hosts.\n     */\n    getAllApps(groupFilter, hostFilter) {\n      return this.getHosts(groupFilter, hostFilter)\n      .then(hosts => {\n        let hostids = _.map(hosts, 'hostid');\n        return this.cachingProxy.getApps(hostids);\n      });\n    }\n\n    getApps(groupFilter, hostFilter, appFilter) {\n      return this.getHosts(groupFilter, hostFilter)\n      .then(hosts => {\n        let hostids = _.map(hosts, 'hostid');\n        if (appFilter) {\n          return this.cachingProxy.getApps(hostids)\n          .then(apps => filterByQuery(apps, appFilter));\n        } else {\n          return {\n            appFilterEmpty: true,\n            hostids: hostids\n          };\n        }\n      });\n    }\n\n    getAllItems(groupFilter, hostFilter, appFilter, options = {}) {\n      return this.getApps(groupFilter, hostFilter, appFilter)\n      .then(apps => {\n        if (apps.appFilterEmpty) {\n          return this.cachingProxy.getItems(apps.hostids, undefined, options.itemtype);\n        } else {\n          let appids = _.map(apps, 'applicationid');\n          return this.cachingProxy.getItems(undefined, appids, options.itemtype);\n        }\n      })\n      .then(items => {\n        if (!options.showDisabledItems) {\n          items = _.filter(items, {'status': '0'});\n        }\n        return items;\n      });\n    }\n\n    getItems(groupFilter, hostFilter, appFilter, itemFilter, options = {}) {\n      return this.getAllItems(groupFilter, hostFilter, appFilter, options)\n      .then(items => filterByQuery(items, itemFilter));\n    }\n\n    /**\n     * Build query - convert target filters to array of Zabbix items\n     */\n    getTriggers(groupFilter, hostFilter, appFilter, showTriggers, hideHostsInMaintenance) {\n      let promises = [\n        this.getGroups(groupFilter),\n        this.getHosts(groupFilter, hostFilter),\n        this.getApps(groupFilter, hostFilter, appFilter)\n      ];\n\n      return Promise.all(promises)\n      .then(results => {\n        let filteredGroups = results[0];\n        let filteredHosts = results[1];\n        let filteredApps = results[2];\n        let query = {};\n\n        if (appFilter) {\n          query.applicationids = _.flatten(_.map(filteredApps, 'applicationid'));\n        }\n        if (hostFilter) {\n          query.hostids = _.map(filteredHosts, 'hostid');\n        }\n        if (groupFilter) {\n          query.groupids = _.map(filteredGroups, 'groupid');\n        }\n\n        return query;\n      }).then(query => {\n        return this.zabbixAPI\n        .getTriggers(query.groupids, query.hostids, query.applicationids, showTriggers, hideHostsInMaintenance);\n      });\n    }\n  }\n\n  return Zabbix;\n}\n\nangular\n  .module('grafana.services')\n  .factory('Zabbix', ZabbixFactory);\n\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Find group, host, app or item by given name.\n * @param  list list of groups, apps or other\n * @param  name visible name\n * @return      array with finded element or empty array\n */\nfunction findByName(list, name) {\n  var finded = _.find(list, {'name': name});\n  if (finded) {\n    return [finded];\n  } else {\n    return [];\n  }\n}\n\n/**\n * Different hosts can contains applications and items with same name.\n * For this reason use _.filter, which return all elements instead _.find,\n * which return only first finded.\n * @param  {[type]} list list of elements\n * @param  {[type]} name app name\n * @return {[type]}      array with finded element or empty array\n */\nfunction filterByName(list, name) {\n  var finded = _.filter(list, {'name': name});\n  if (finded) {\n    return finded;\n  } else {\n    return [];\n  }\n}\n\nfunction filterByRegex(list, regex) {\n  var filterPattern = utils.buildRegex(regex);\n  return _.filter(list, function (zbx_obj) {\n    return filterPattern.test(zbx_obj.name);\n  });\n}\n\nfunction findByFilter(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByRegex(list, filter);\n  } else {\n    return findByName(list, filter);\n  }\n}\n\nfunction filterByQuery(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByRegex(list, filter);\n  } else {\n    return filterByName(list, filter);\n  }\n}\n"]}