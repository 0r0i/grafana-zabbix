{"version":3,"sources":["../../src/datasource-zabbix/zabbix.js"],"names":["ZabbixFactory","zabbixAPIService","ZabbixCachingProxy","Zabbix","url","username","password","basicAuth","withCredentials","cacheTTL","ZabbixAPI","zabbixAPI","cacheOptions","enabled","ttl","cachingProxy","getHistory","bind","getMacros","getTrend","getEvents","getAlerts","getAcknowledges","getITService","getSLA","getVersion","login","target","options","parts","filters","_","map","p","filter","getItems","getGroups","groupFilter","getAllGroups","then","findByFilter","groups","groupids","getHosts","hostFilter","getAllHosts","hosts","hostids","getApps","appFilter","filterByQuery","apps","appFilterEmpty","undefined","itemtype","appids","showDisabledItems","items","expandUserMacro","getHostIds","forEach","containsMacro","item","name","replaceMacro","macros","itemFilter","getAllItems","showTriggers","hideHostsInMaintenance","promises","Promise","all","filteredGroups","results","filteredHosts","filteredApps","query","applicationids","flatten","getTriggers","findByName","list","finded","find","filterByName","filterByRegex","regex","filterPattern","utils","buildRegex","zbx_obj","test","isRegex","hostIds","uniq","itemName","MACRO_PATTERN","item_macros","match","host_macros","m","hostid","macro_def","macro","value","macro_value","macro_regex","RegExp","escapeMacro","replace","angular","module","factory"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AACA;;AAEA;AACA,WAASA,aAAT,CAAuBC,gBAAvB,EAAyCC,kBAAzC,EAA6D;AAAA,QAErDC,MAFqD;AAGzD,sBAAYC,GAAZ,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,eAAhD,EAAiEC,QAAjE,EAA2E;AAAA;;AAEzE;AACA,YAAIC,YAAYT,gBAAhB;AACA,aAAKU,SAAL,GAAiB,IAAID,SAAJ,CAAcN,GAAd,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuCC,SAAvC,EAAkDC,eAAlD,CAAjB;;AAEA;AACA,YAAII,eAAe;AACjBC,mBAAS,IADQ;AAEjBC,eAAKL;AAFY,SAAnB;AAIA,aAAKM,YAAL,GAAoB,IAAIb,kBAAJ,CAAuB,KAAKS,SAA5B,EAAuCC,YAAvC,CAApB;;AAEA;AACA,aAAKI,UAAL,GAAkB,KAAKD,YAAL,CAAkBC,UAAlB,CAA6BC,IAA7B,CAAkC,KAAKF,YAAvC,CAAlB;AACA,aAAKG,SAAL,GAAiB,KAAKH,YAAL,CAAkBG,SAAlB,CAA4BD,IAA5B,CAAiC,KAAKF,YAAtC,CAAjB;;AAEA,aAAKI,QAAL,GAAgB,KAAKR,SAAL,CAAeQ,QAAf,CAAwBF,IAAxB,CAA6B,KAAKN,SAAlC,CAAhB;AACA,aAAKS,SAAL,GAAiB,KAAKT,SAAL,CAAeS,SAAf,CAAyBH,IAAzB,CAA8B,KAAKN,SAAnC,CAAjB;AACA,aAAKU,SAAL,GAAiB,KAAKV,SAAL,CAAeU,SAAf,CAAyBJ,IAAzB,CAA8B,KAAKN,SAAnC,CAAjB;AACA,aAAKW,eAAL,GAAuB,KAAKX,SAAL,CAAeW,eAAf,CAA+BL,IAA/B,CAAoC,KAAKN,SAAzC,CAAvB;AACA,aAAKY,YAAL,GAAoB,KAAKZ,SAAL,CAAeY,YAAf,CAA4BN,IAA5B,CAAiC,KAAKN,SAAtC,CAApB;AACA,aAAKa,MAAL,GAAc,KAAKb,SAAL,CAAea,MAAf,CAAsBP,IAAtB,CAA2B,KAAKN,SAAhC,CAAd;AACA,aAAKc,UAAL,GAAkB,KAAKd,SAAL,CAAec,UAAf,CAA0BR,IAA1B,CAA+B,KAAKN,SAApC,CAAlB;AACA,aAAKe,KAAL,GAAa,KAAKf,SAAL,CAAee,KAAf,CAAqBT,IAArB,CAA0B,KAAKN,SAA/B,CAAb;AACD;;AA5BwD;AAAA;AAAA,2CA8BtCgB,MA9BsC,EA8B9BC,OA9B8B,EA8BrB;AAClC,cAAIC,QAAQ,CAAC,OAAD,EAAU,MAAV,EAAkB,aAAlB,EAAiC,MAAjC,CAAZ;AACA,cAAIC,UAAUC,EAAEC,GAAF,CAAMH,KAAN,EAAa;AAAA,mBAAKF,OAAOM,CAAP,EAAUC,MAAf;AAAA,WAAb,CAAd;AACA,iBAAO,KAAKC,QAAL,gCAAiBL,OAAjB,UAA0BF,OAA1B,GAAP;AACD;AAlCwD;AAAA;AAAA,uCAoC1C;AACb,iBAAO,KAAKb,YAAL,CAAkBqB,SAAlB,EAAP;AACD;AAtCwD;AAAA;AAAA,kCAwC/CC,WAxC+C,EAwClC;AACrB,iBAAO,KAAKC,YAAL,GACNC,IADM,CACD;AAAA,mBAAUC,aAAaC,MAAb,EAAqBJ,WAArB,CAAV;AAAA,WADC,CAAP;AAED;AA3CwD;AAAA;AAAA,oCAgD7CA,WAhD6C,EAgDhC;AAAA;;AACvB,iBAAO,KAAKD,SAAL,CAAeC,WAAf,EACNE,IADM,CACD,kBAAU;AACd,gBAAIG,WAAWX,EAAEC,GAAF,CAAMS,MAAN,EAAc,SAAd,CAAf;AACA,mBAAO,MAAK1B,YAAL,CAAkB4B,QAAlB,CAA2BD,QAA3B,CAAP;AACD,WAJM,CAAP;AAKD;AAtDwD;AAAA;AAAA,iCAwDhDL,WAxDgD,EAwDnCO,UAxDmC,EAwDvB;AAChC,iBAAO,KAAKC,WAAL,CAAiBR,WAAjB,EACNE,IADM,CACD;AAAA,mBAASC,aAAaM,KAAb,EAAoBF,UAApB,CAAT;AAAA,WADC,CAAP;AAED;AA3DwD;AAAA;AAAA,mCAgE9CP,WAhE8C,EAgEjCO,UAhEiC,EAgErB;AAAA;;AAClC,iBAAO,KAAKD,QAAL,CAAcN,WAAd,EAA2BO,UAA3B,EACNL,IADM,CACD,iBAAS;AACb,gBAAIQ,UAAUhB,EAAEC,GAAF,CAAMc,KAAN,EAAa,QAAb,CAAd;AACA,mBAAO,OAAK/B,YAAL,CAAkBiC,OAAlB,CAA0BD,OAA1B,CAAP;AACD,WAJM,CAAP;AAKD;AAtEwD;AAAA;AAAA,gCAwEjDV,WAxEiD,EAwEpCO,UAxEoC,EAwExBK,SAxEwB,EAwEb;AAAA;;AAC1C,iBAAO,KAAKN,QAAL,CAAcN,WAAd,EAA2BO,UAA3B,EACNL,IADM,CACD,iBAAS;AACb,gBAAIQ,UAAUhB,EAAEC,GAAF,CAAMc,KAAN,EAAa,QAAb,CAAd;AACA,gBAAIG,SAAJ,EAAe;AACb,qBAAO,OAAKlC,YAAL,CAAkBiC,OAAlB,CAA0BD,OAA1B,EACNR,IADM,CACD;AAAA,uBAAQW,cAAcC,IAAd,EAAoBF,SAApB,CAAR;AAAA,eADC,CAAP;AAED,aAHD,MAGO;AACL,qBAAO;AACLG,gCAAgB,IADX;AAELL,yBAASA;AAFJ,eAAP;AAID;AACF,WAZM,CAAP;AAaD;AAtFwD;AAAA;AAAA,oCAwF7CV,WAxF6C,EAwFhCO,UAxFgC,EAwFpBK,SAxFoB,EAwFK;AAAA;;AAAA,cAAdrB,OAAc,uEAAJ,EAAI;;AAC5D,iBAAO,KAAKoB,OAAL,CAAaX,WAAb,EAA0BO,UAA1B,EAAsCK,SAAtC,EACNV,IADM,CACD,gBAAQ;AACZ,gBAAIY,KAAKC,cAAT,EAAyB;AACvB,qBAAO,OAAKrC,YAAL,CAAkBoB,QAAlB,CAA2BgB,KAAKJ,OAAhC,EAAyCM,SAAzC,EAAoDzB,QAAQ0B,QAA5D,CAAP;AACD,aAFD,MAEO;AACL,kBAAIC,SAASxB,EAAEC,GAAF,CAAMmB,IAAN,EAAY,eAAZ,CAAb;AACA,qBAAO,OAAKpC,YAAL,CAAkBoB,QAAlB,CAA2BkB,SAA3B,EAAsCE,MAAtC,EAA8C3B,QAAQ0B,QAAtD,CAAP;AACD;AACF,WARM,EASNf,IATM,CASD,iBAAS;AACb,gBAAI,CAACX,QAAQ4B,iBAAb,EAAgC;AAC9BC,sBAAQ1B,EAAEG,MAAF,CAASuB,KAAT,EAAgB,EAAC,UAAU,GAAX,EAAhB,CAAR;AACD;;AAED,mBAAOA,KAAP;AACD,WAfM,EAgBNlB,IAhBM,CAgBD,KAAKmB,eAAL,CAAqBzC,IAArB,CAA0B,IAA1B,CAhBC,CAAP;AAiBD;AA1GwD;AAAA;AAAA,wCA4GzCwC,KA5GyC,EA4GlC;AACrB,cAAIV,UAAUY,WAAWF,KAAX,CAAd;AACA,iBAAO,KAAKvC,SAAL,CAAe6B,OAAf,EACNR,IADM,CACD,kBAAU;AACdR,cAAE6B,OAAF,CAAUH,KAAV,EAAiB,gBAAQ;AACvB,kBAAII,cAAcC,KAAKC,IAAnB,CAAJ,EAA8B;AAC5BD,qBAAKC,IAAL,GAAYC,aAAaF,IAAb,EAAmBG,MAAnB,CAAZ;AACD;AACF,aAJD;AAKA,mBAAOR,KAAP;AACD,WARM,CAAP;AASD;AAvHwD;AAAA;AAAA,iCAyHhDpB,WAzHgD,EAyHnCO,UAzHmC,EAyHvBK,SAzHuB,EAyHZiB,UAzHY,EAyHc;AAAA,cAAdtC,OAAc,uEAAJ,EAAI;;AACrE,iBAAO,KAAKuC,WAAL,CAAiB9B,WAAjB,EAA8BO,UAA9B,EAA0CK,SAA1C,EAAqDrB,OAArD,EACNW,IADM,CACD;AAAA,mBAASW,cAAcO,KAAd,EAAqBS,UAArB,CAAT;AAAA,WADC,CAAP;AAED;AA5HwD;AAAA;AAAA,oCAiI7C7B,WAjI6C,EAiIhCO,UAjIgC,EAiIpBK,SAjIoB,EAiITmB,YAjIS,EAiIKC,sBAjIL,EAiI6B;AAAA;;AACpF,cAAIC,WAAW,CACb,KAAKlC,SAAL,CAAeC,WAAf,CADa,EAEb,KAAKM,QAAL,CAAcN,WAAd,EAA2BO,UAA3B,CAFa,EAGb,KAAKI,OAAL,CAAaX,WAAb,EAA0BO,UAA1B,EAAsCK,SAAtC,CAHa,CAAf;;AAMA,iBAAOsB,QAAQC,GAAR,CAAYF,QAAZ,EACN/B,IADM,CACD,mBAAW;AACf,gBAAIkC,iBAAiBC,QAAQ,CAAR,CAArB;AACA,gBAAIC,gBAAgBD,QAAQ,CAAR,CAApB;AACA,gBAAIE,eAAeF,QAAQ,CAAR,CAAnB;AACA,gBAAIG,QAAQ,EAAZ;;AAEA,gBAAI5B,SAAJ,EAAe;AACb4B,oBAAMC,cAAN,GAAuB/C,EAAEgD,OAAF,CAAUhD,EAAEC,GAAF,CAAM4C,YAAN,EAAoB,eAApB,CAAV,CAAvB;AACD;AACD,gBAAIhC,UAAJ,EAAgB;AACdiC,oBAAM9B,OAAN,GAAgBhB,EAAEC,GAAF,CAAM2C,aAAN,EAAqB,QAArB,CAAhB;AACD;AACD,gBAAItC,WAAJ,EAAiB;AACfwC,oBAAMnC,QAAN,GAAiBX,EAAEC,GAAF,CAAMyC,cAAN,EAAsB,SAAtB,CAAjB;AACD;;AAED,mBAAOI,KAAP;AACD,WAlBM,EAkBJtC,IAlBI,CAkBC,iBAAS;AACf,mBAAO,OAAK5B,SAAL,CACNqE,WADM,CACMH,MAAMnC,QADZ,EACsBmC,MAAM9B,OAD5B,EACqC8B,MAAMC,cAD3C,EAC2DV,YAD3D,EACyEC,sBADzE,CAAP;AAED,WArBM,CAAP;AAsBD;AA9JwD;;AAAA;AAAA;;AAiK3D,WAAOlE,MAAP;AACD;;AAMD;;AAEA;;;;;;AAMA,WAAS8E,UAAT,CAAoBC,IAApB,EAA0BnB,IAA1B,EAAgC;AAC9B,QAAIoB,SAASpD,EAAEqD,IAAF,CAAOF,IAAP,EAAa,EAAC,QAAQnB,IAAT,EAAb,CAAb;AACA,QAAIoB,MAAJ,EAAY;AACV,aAAO,CAACA,MAAD,CAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AACF;;AAED;;;;;;;;AAQA,WAASE,YAAT,CAAsBH,IAAtB,EAA4BnB,IAA5B,EAAkC;AAChC,QAAIoB,SAASpD,EAAEG,MAAF,CAASgD,IAAT,EAAe,EAAC,QAAQnB,IAAT,EAAf,CAAb;AACA,QAAIoB,MAAJ,EAAY;AACV,aAAOA,MAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AACF;;AAED,WAASG,aAAT,CAAuBJ,IAAvB,EAA6BK,KAA7B,EAAoC;AAClC,QAAIC,gBAAgBC,MAAMC,UAAN,CAAiBH,KAAjB,CAApB;AACA,WAAOxD,EAAEG,MAAF,CAASgD,IAAT,EAAe,UAAUS,OAAV,EAAmB;AACvC,aAAOH,cAAcI,IAAd,CAAmBD,QAAQ5B,IAA3B,CAAP;AACD,KAFM,CAAP;AAGD;;AAED,WAASvB,YAAT,CAAsB0C,IAAtB,EAA4BhD,MAA5B,EAAoC;AAClC,QAAIuD,MAAMI,OAAN,CAAc3D,MAAd,CAAJ,EAA2B;AACzB,aAAOoD,cAAcJ,IAAd,EAAoBhD,MAApB,CAAP;AACD,KAFD,MAEO;AACL,aAAO+C,WAAWC,IAAX,EAAiBhD,MAAjB,CAAP;AACD;AACF;;AAED,WAASgB,aAAT,CAAuBgC,IAAvB,EAA6BhD,MAA7B,EAAqC;AACnC,QAAIuD,MAAMI,OAAN,CAAc3D,MAAd,CAAJ,EAA2B;AACzB,aAAOoD,cAAcJ,IAAd,EAAoBhD,MAApB,CAAP;AACD,KAFD,MAEO;AACL,aAAOmD,aAAaH,IAAb,EAAmBhD,MAAnB,CAAP;AACD;AACF;;AAED,WAASyB,UAAT,CAAoBF,KAApB,EAA2B;AACzB,QAAIqC,UAAU/D,EAAEC,GAAF,CAAMyB,KAAN,EAAa,gBAAQ;AACjC,aAAO1B,EAAEC,GAAF,CAAM8B,KAAKhB,KAAX,EAAkB,QAAlB,CAAP;AACD,KAFa,CAAd;AAGA,WAAOf,EAAEgE,IAAF,CAAOhE,EAAEgD,OAAF,CAAUe,OAAV,CAAP,CAAP;AACD;;AAID,WAASjC,aAAT,CAAuBmC,QAAvB,EAAiC;AAC/B,WAAOC,cAAcL,IAAd,CAAmBI,QAAnB,CAAP;AACD;;AAED,WAAShC,YAAT,CAAsBF,IAAtB,EAA4BG,MAA5B,EAAoC;AAClC,QAAI+B,WAAWlC,KAAKC,IAApB;AACA,QAAImC,cAAcF,SAASG,KAAT,CAAeF,aAAf,CAAlB;AACAlE,MAAE6B,OAAF,CAAUsC,WAAV,EAAuB,iBAAS;AAC9B,UAAIE,cAAcrE,EAAEG,MAAF,CAAS+B,MAAT,EAAiB,aAAK;AACtC,YAAIoC,EAAEC,MAAN,EAAc;AACZ,iBAAOD,EAAEC,MAAF,KAAaxC,KAAKwC,MAAzB;AACD,SAFD,MAEO;AACL;AACA,iBAAO,IAAP;AACD;AACF,OAPiB,CAAlB;;AASA,UAAIC,YAAYxE,EAAEqD,IAAF,CAAOgB,WAAP,EAAoB,EAACI,OAAOA,KAAR,EAApB,CAAhB;AACA,UAAID,aAAaA,UAAUE,KAA3B,EAAkC;AAChC,YAAIC,cAAcH,UAAUE,KAA5B;AACA,YAAIE,cAAc,IAAIC,MAAJ,CAAWC,YAAYL,KAAZ,CAAX,CAAlB;AACAR,mBAAWA,SAASc,OAAT,CAAiBH,WAAjB,EAA8BD,WAA9B,CAAX;AACD;AACF,KAhBD;;AAkBA,WAAOV,QAAP;AACD;;AAED,WAASa,WAAT,CAAqBL,KAArB,EAA6B;AAC3BA,YAAQA,MAAMM,OAAN,CAAc,IAAd,EAAoB,MAApB,CAAR;AACA,WAAON,KAAP;AACD;;;AAnRMO,a;;AACAhF,O;;AACK0D,W;;;;;;;;;;;;;;;;;;;;;AA4KZsB,cACGC,MADH,CACU,kBADV,EAEGC,OAFH,CAEW,QAFX,EAEqBjH,aAFrB,EAoEIiG,a,GAAgB,mB","file":"zabbix.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport * as utils from './utils';\nimport './zabbixAPI.service.js';\nimport './zabbixCachingProxy.service.js';\n\n// Use factory() instead service() for multiple data sources support.\n// Each Zabbix data source instance should initialize its own API instance.\n\n/** @ngInject */\nfunction ZabbixFactory(zabbixAPIService, ZabbixCachingProxy) {\n\n  class Zabbix {\n    constructor(url, username, password, basicAuth, withCredentials, cacheTTL) {\n\n      // Initialize Zabbix API\n      var ZabbixAPI = zabbixAPIService;\n      this.zabbixAPI = new ZabbixAPI(url, username, password, basicAuth, withCredentials);\n\n      // Initialize caching proxy for requests\n      let cacheOptions = {\n        enabled: true,\n        ttl: cacheTTL\n      };\n      this.cachingProxy = new ZabbixCachingProxy(this.zabbixAPI, cacheOptions);\n\n      // Proxy methods\n      this.getHistory = this.cachingProxy.getHistory.bind(this.cachingProxy);\n      this.getMacros = this.cachingProxy.getMacros.bind(this.cachingProxy);\n\n      this.getTrend = this.zabbixAPI.getTrend.bind(this.zabbixAPI);\n      this.getEvents = this.zabbixAPI.getEvents.bind(this.zabbixAPI);\n      this.getAlerts = this.zabbixAPI.getAlerts.bind(this.zabbixAPI);\n      this.getAcknowledges = this.zabbixAPI.getAcknowledges.bind(this.zabbixAPI);\n      this.getITService = this.zabbixAPI.getITService.bind(this.zabbixAPI);\n      this.getSLA = this.zabbixAPI.getSLA.bind(this.zabbixAPI);\n      this.getVersion = this.zabbixAPI.getVersion.bind(this.zabbixAPI);\n      this.login = this.zabbixAPI.login.bind(this.zabbixAPI);\n    }\n\n    getItemsFromTarget(target, options) {\n      let parts = ['group', 'host', 'application', 'item'];\n      let filters = _.map(parts, p => target[p].filter);\n      return this.getItems(...filters, options);\n    }\n\n    getAllGroups() {\n      return this.cachingProxy.getGroups();\n    }\n\n    getGroups(groupFilter) {\n      return this.getAllGroups()\n      .then(groups => findByFilter(groups, groupFilter));\n    }\n\n    /**\n     * Get list of host belonging to given groups.\n     */\n    getAllHosts(groupFilter) {\n      return this.getGroups(groupFilter)\n      .then(groups => {\n        let groupids = _.map(groups, 'groupid');\n        return this.cachingProxy.getHosts(groupids);\n      });\n    }\n\n    getHosts(groupFilter, hostFilter) {\n      return this.getAllHosts(groupFilter)\n      .then(hosts => findByFilter(hosts, hostFilter));\n    }\n\n    /**\n     * Get list of applications belonging to given groups and hosts.\n     */\n    getAllApps(groupFilter, hostFilter) {\n      return this.getHosts(groupFilter, hostFilter)\n      .then(hosts => {\n        let hostids = _.map(hosts, 'hostid');\n        return this.cachingProxy.getApps(hostids);\n      });\n    }\n\n    getApps(groupFilter, hostFilter, appFilter) {\n      return this.getHosts(groupFilter, hostFilter)\n      .then(hosts => {\n        let hostids = _.map(hosts, 'hostid');\n        if (appFilter) {\n          return this.cachingProxy.getApps(hostids)\n          .then(apps => filterByQuery(apps, appFilter));\n        } else {\n          return {\n            appFilterEmpty: true,\n            hostids: hostids\n          };\n        }\n      });\n    }\n\n    getAllItems(groupFilter, hostFilter, appFilter, options = {}) {\n      return this.getApps(groupFilter, hostFilter, appFilter)\n      .then(apps => {\n        if (apps.appFilterEmpty) {\n          return this.cachingProxy.getItems(apps.hostids, undefined, options.itemtype);\n        } else {\n          let appids = _.map(apps, 'applicationid');\n          return this.cachingProxy.getItems(undefined, appids, options.itemtype);\n        }\n      })\n      .then(items => {\n        if (!options.showDisabledItems) {\n          items = _.filter(items, {'status': '0'});\n        }\n\n        return items;\n      })\n      .then(this.expandUserMacro.bind(this));\n    }\n\n    expandUserMacro(items) {\n      let hostids = getHostIds(items);\n      return this.getMacros(hostids)\n      .then(macros => {\n        _.forEach(items, item => {\n          if (containsMacro(item.name)) {\n            item.name = replaceMacro(item, macros);\n          }\n        });\n        return items;\n      });\n    }\n\n    getItems(groupFilter, hostFilter, appFilter, itemFilter, options = {}) {\n      return this.getAllItems(groupFilter, hostFilter, appFilter, options)\n      .then(items => filterByQuery(items, itemFilter));\n    }\n\n    /**\n     * Build query - convert target filters to array of Zabbix items\n     */\n    getTriggers(groupFilter, hostFilter, appFilter, showTriggers, hideHostsInMaintenance) {\n      let promises = [\n        this.getGroups(groupFilter),\n        this.getHosts(groupFilter, hostFilter),\n        this.getApps(groupFilter, hostFilter, appFilter)\n      ];\n\n      return Promise.all(promises)\n      .then(results => {\n        let filteredGroups = results[0];\n        let filteredHosts = results[1];\n        let filteredApps = results[2];\n        let query = {};\n\n        if (appFilter) {\n          query.applicationids = _.flatten(_.map(filteredApps, 'applicationid'));\n        }\n        if (hostFilter) {\n          query.hostids = _.map(filteredHosts, 'hostid');\n        }\n        if (groupFilter) {\n          query.groupids = _.map(filteredGroups, 'groupid');\n        }\n\n        return query;\n      }).then(query => {\n        return this.zabbixAPI\n        .getTriggers(query.groupids, query.hostids, query.applicationids, showTriggers, hideHostsInMaintenance);\n      });\n    }\n  }\n\n  return Zabbix;\n}\n\nangular\n  .module('grafana.services')\n  .factory('Zabbix', ZabbixFactory);\n\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Find group, host, app or item by given name.\n * @param  list list of groups, apps or other\n * @param  name visible name\n * @return      array with finded element or empty array\n */\nfunction findByName(list, name) {\n  var finded = _.find(list, {'name': name});\n  if (finded) {\n    return [finded];\n  } else {\n    return [];\n  }\n}\n\n/**\n * Different hosts can contains applications and items with same name.\n * For this reason use _.filter, which return all elements instead _.find,\n * which return only first finded.\n * @param  {[type]} list list of elements\n * @param  {[type]} name app name\n * @return {[type]}      array with finded element or empty array\n */\nfunction filterByName(list, name) {\n  var finded = _.filter(list, {'name': name});\n  if (finded) {\n    return finded;\n  } else {\n    return [];\n  }\n}\n\nfunction filterByRegex(list, regex) {\n  var filterPattern = utils.buildRegex(regex);\n  return _.filter(list, function (zbx_obj) {\n    return filterPattern.test(zbx_obj.name);\n  });\n}\n\nfunction findByFilter(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByRegex(list, filter);\n  } else {\n    return findByName(list, filter);\n  }\n}\n\nfunction filterByQuery(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByRegex(list, filter);\n  } else {\n    return filterByName(list, filter);\n  }\n}\n\nfunction getHostIds(items) {\n  let hostIds = _.map(items, item => {\n    return _.map(item.hosts, 'hostid');\n  });\n  return _.uniq(_.flatten(hostIds));\n}\n\nlet MACRO_PATTERN = /{\\$[A-Z0-9_\\.]+}/g;\n\nfunction containsMacro(itemName) {\n  return MACRO_PATTERN.test(itemName);\n}\n\nfunction replaceMacro(item, macros) {\n  let itemName = item.name;\n  let item_macros = itemName.match(MACRO_PATTERN);\n  _.forEach(item_macros, macro => {\n    let host_macros = _.filter(macros, m => {\n      if (m.hostid) {\n        return m.hostid === item.hostid;\n      } else {\n        // Add global macros\n        return true;\n      }\n    });\n\n    let macro_def = _.find(host_macros, {macro: macro});\n    if (macro_def && macro_def.value) {\n      let macro_value = macro_def.value;\n      let macro_regex = new RegExp(escapeMacro(macro));\n      itemName = itemName.replace(macro_regex, macro_value);\n    }\n  });\n\n  return itemName;\n}\n\nfunction escapeMacro(macro)  {\n  macro = macro.replace(/\\$/, '\\\\\\$');\n  return macro;\n}\n"]}